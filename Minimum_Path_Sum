class Solution {
    public int minPathSum(int[][] grid) {
        String[][] path = new String[grid.length][grid[0].length];
        path[0][0] = Integer.toString(grid[0][0]);
        int[][] arr = new int[grid.length][grid[0].length];
        arr[0][0] = grid[0][0];
        
        for(int i=1;i<grid.length;i++) {
            arr[i][0] = arr[i-1][0]+grid[i][0];
            path[i][0] = path[i-1][0]+","+Integer.toString(grid[i][0]);
        }
        
        for(int j=1;j<grid[0].length;j++) {
            arr[0][j] = arr[0][j-1]+grid[0][j];
            path[0][j] = path[0][j-1]+","+Integer.toString(grid[0][j]);
        }
        
        for(int i=1; i<grid.length; i++) {
            for(int j=1; j<grid[0].length; j++) {
                arr[i][j] = Math.min(arr[i-1][j], arr[i][j-1])+grid[i][j];
                path[i][j] = arr[i-1][j] < arr[i][j-1] ? path[i-1][j].concat(","+Integer.toString(grid[i][j])) : path[i][j-1].concat(","+Integer.toString(grid[i][j]));
            }
        }
        System.out.println(path[grid.length-1][grid[0].length-1]);
       return arr[grid.length-1][grid[0].length-1]; 
    }
}
